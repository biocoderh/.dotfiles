#!/bin/sh

if ! [ -x "$(command -v pacman)" ]; then
  echo "pacman is not installed."
  exit 1
fi


ARCH=""

if ! [ -f "/lib/ld-linux-x86-64.so.2" ]; then
  echo "Not supported"
  exit 1
fi

if /lib/ld-linux-x86-64.so.2 --help | grep -q 'x86-64-v3 (supported, searched)'; then ARCH='x86-64-v3'
elif /lib/ld-linux-x86-64.so.2 --help | grep -q 'x86-64-v2 (supported, searched)'; then ARCH='x86-64-v2'
else echo "Architecture is not supported"; exit 1
fi

echo "Supported architecture: $ARCH"

# shellcheck disable=SC2068
aur_install() {
  if [ -x "$(command -v paru)" ]; then
    paru -Sy --noconfirm --needed --sudoloop --skipreview $@
    return $?
  elif [ -x "$(command -v yay)" ]; then
    yay -Sy --noconfirm --needed --sudoloop $@
    return $?
  else
    sudo pacman -Sy --noconfirm --needed git base-devel || return 1

    for package in $@; do
      git clone https://aur.archlinux.org/"$package".git || return 1
      cd "$package" || return 1
      makepkg -cis --noconfirm --needed || return 1
      cd ..
      rm -rdf "$package"
    done
  fi
}

ALHP_PACKAGES="alhp-keyring alhp-mirrorlist"

# shellcheck disable=SC2086
if ! pacman -Q $ALHP_PACKAGES > /dev/null 2>&1; then
  if ! aur_install "$ALHP_PACKAGES"; then
    echo "Can't install: $ALHP_PACKAGES"
    exit 1
  fi
fi


PACMAN_CONF="/etc/pacman.conf"

grep -qxF "[core-$ARCH]" "$PACMAN_CONF" || sudo sed -i "/^[^#]*\[core\]/i [core-$ARCH]\nInclude = /etc/pacman.d/alhp-mirrorlist\n" $PACMAN_CONF
grep -qxF "[extra-$ARCH]" "$PACMAN_CONF" || sudo sed -i "/^[^#]*\[extra\]/i [extra-$ARCH]\nInclude = /etc/pacman.d/alhp-mirrorlist\n" "$PACMAN_CONF"
grep -qxF "[multilib-$ARCH]" "$PACMAN_CONF" || sudo sed -i "/^[^#]*\[multilib\]/i [multilib-$ARCH]\nInclude = /etc/pacman.d/alhp-mirrorlist\n" "$PACMAN_CONF"


sudo pacman -Suy --noconfirm
echo "alhp-install done."
